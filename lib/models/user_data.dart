import 'dart:convert';
import 'dart:io';

import 'package:flutter/material.dart';
import 'package:nclientv3/utils/utils.dart';

class UserDataModel {
  static const saveFileName = "user_data.json";

  /// User agent provided by the webview
  String? userAgent;

  /// User cookies generated by cloudflare that we need to access nhentai
  List<Cookie>? cookies;

  UserDataModel(/* {this.userAgent, this.cookies} */);

//   set setUserAgent(String userAgent) {
  // this.userAgent = userAgent;
//   }

//   set cookies(List<Cookie> cookies) {
  // this.cookies = cookies;
//   }

  /// Create a modal from JSON (Map) data
//   UserDataModel.fromJSON(dynamic json)
//       : this(
//           userAgent: json['userAgent'],
//           cookies: json['cookies'],
//         );

  /// Convert model data to JSON format
//   Map<String, dynamic> toJson() => {
//         'userAgent': userAgent,
//         'cookies': cookies,
//       };

  Future<bool> saveToFileData() async {
    Directory? appDir = await getAppDir();

    if (appDir == null) return false;

    try {
      // save cookies
      String cookiesStore = "";

      for (var cookie in (cookies ?? [])) {
        final data = {"name": cookie.name, "value": cookie.value};

        cookiesStore += "${jsonEncode(data)},";
      }

      // remove last character from string, aka ","
      if (cookiesStore.isNotEmpty) {
        cookiesStore = cookiesStore.substring(0, cookiesStore.length - 1);
      }

      // save user agent and encode all data
      final encodedData = jsonEncode({
        "userAgent": userAgent,
        "cookies": "[$cookiesStore]",
      });

      final newFile = await File("${appDir.path}/$saveFileName").create();
      // if the file is empty, don't append , at the start of the json!
      await newFile.writeAsString(
        encodedData,
        mode: FileMode.write,
      );

      return true;
    } catch (err) {
      debugPrint(err.toString());
    }

    return false;
  }

  /// Load cookie data. If `filePath` is provided, read sleep data from the provided path file,
  ///
  /// else read the data from our cookies.json in our app directory
  Future<bool> loadDataFromFile() async {
    final Directory? appDir = await getAppDir();

    if (appDir == null) return false;

    final File saveFile = File("${appDir.path}/$saveFileName");

    if (!saveFile.existsSync()) return false;

    final saveData = await saveFile.readAsString();
    final userDataJson = jsonDecode(saveData);
    final List<Cookie> extractedCookies = [];

    if (userDataJson['cookies'] != null) {
      for (var cookie in userDataJson['cookies']) {
        // check if type of cookie is string
        extractedCookies.add(Cookie(
          cookie['name'],
          cookie['value'],
        ));
      }
    }

    cookies = extractedCookies;
    userAgent = userDataJson['userAgent'];

    return true;
  }
}
